name: Deploy CDK for develop

on:
  push:
    branches:
      - develop
    paths:
      - "Stackable-Infrastructure/**"
      
  pull_request:
    paths:
      - "Stackable-Infrastructure/**"

permissions:
  id-token: write
  contents: read
  issues: write # PRにコメントできるように設定
  pull-requests: write # PRにコメントできるように設定

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8'

      - name: Install AWS CDK
        run: npm install -g aws-cdk
      
      - name: CDK Diff
        id: cdk-diff
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1
        run: cdk diff --require-approval never
        working-directory: ./Stackable-Infrastructure
      
      - name: Update Pull Request
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.USER_TOKEN }}
          script: |
            // 1. Retrieve existing bot comments for the PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            })
            const botComment = comments.find(comment => {
              return comment.body.includes('#### Terraform Format and Style 🖌')
            })

            const output = `
            #### Terraform Plan 📖\`${{ steps.cdk-diff.outcome }}\`
            <details><summary>Show Duff</summary>

            \`\`\`\n
            ${{ steps.cdk-diff.outputs.stdout }}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            // 3. If we have a comment, update it, otherwise create a new one
            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: output
              })
            } else {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: output
              })
            }

      - name: CDK Deploy
        if: contains(github.event_name, 'push')
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ap-northeast-1
        run: cdk deploy --require-approval never
        working-directory: ./Stackable-Infrastructure

